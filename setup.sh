#!/bin/bash
# Automatinen asennusskripti LLMFixU-j√§rjestelm√§lle

set -e

echo "üöÄ LLMFixU Auditointi-AI j√§rjestelm√§n asennus"
echo "============================================="

# Tarkista Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker ei ole asennettu. Asenna Docker ensin."
    exit 1
fi

echo "‚úÖ Docker l√∂ydetty"

# Tarkista Python
if ! command -v python3 &> /dev/null && ! command -v python &> /dev/null; then
    echo "‚ùå Python ei ole asennettu. Asenna Python 3.8+ ensin."
    exit 1
fi

PYTHON_CMD="python3"
if ! command -v python3 &> /dev/null; then
    PYTHON_CMD="python"
fi

echo "‚úÖ Python l√∂ydetty"

# Asenna Python-riippuvuudet
echo "üì¶ Asennetaan Python-riippuvuudet..."
$PYTHON_CMD -m pip install -r requirements.txt

# K√§ynnist√§ palvelut
echo "üê≥ K√§ynnistet√§√§n Docker-palvelut..."
docker compose up -d

echo "‚è≥ Odotetaan palveluiden k√§ynnistymist√§ (30 sekuntia)..."
sleep 30

# Lataa perusmalli
echo "ü§ñ Ladataan perusmalli Ollamaan..."
docker exec ollama ollama pull llama2:7b || echo "‚ö†Ô∏è Mallin lataus ep√§onnistui, voit kokeilla my√∂hemmin komennolla 'make pull-models'"

# Suorita diagnostiikka
echo "üîç Suoritetaan diagnostiikka..."
$PYTHON_CMD scripts/diagnostic.py

echo ""
echo "üéâ Asennus valmis!"
echo ""
echo "K√§ytt√∂liittym√§t:"
echo "- OpenWebUI: http://localhost:3000"
echo "- n8n: http://localhost:5678"
echo "- ChromaDB API: http://localhost:8000"
echo "- Ollama API: http://localhost:11434"
echo ""
echo "Hy√∂dyllisi√§ komentoja:"
echo "- make help          # N√§yt√§ kaikki komennot"
echo "- make diag          # Tarkista j√§rjestelm√§n tila"
echo "- make embed         # Tallenna dokumentteja"
echo "- make query         # Hae dokumentteja"
echo "- make logs          # N√§yt√§ palveluiden lokit"